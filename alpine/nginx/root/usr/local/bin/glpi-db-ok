#!/usr/bin/env php
<?php

// Extract command line arguments
$options = [];
if (isset($_SERVER['argv'])) {
   for ($i = 1; $i < count($_SERVER['argv']); $i++) {
      $chunks = explode('=', $_SERVER['argv'][$i], 2);
      $chunks[0] = preg_replace('/^--/', '', $chunks[0]);
      $options[$chunks[0]] = (isset($chunks[1]) ? $chunks[1] : true);
   }
}

// If "config-dir" option is used in command line, defines GLPI_CONFIG_DIR with its value
if (array_key_exists('config-dir', $options)) {
   $config_dir = $options['config-dir'];

   if (false === $config_dir || !@is_dir($config_dir)) {
      die(
         sprintf(
            '--config-dir "%s" does not exists in "%s".' . "\n",
            $config_dir,
            getcwd()
         )
      );
   }

   define('GLPI_CONFIG_DIR', realpath($config_dir));
}


// Init GLPI
define('GLPI_ROOT', '/var/www/glpi/');

require_once(GLPI_ROOT . '/inc/based_config.php');
require_once(GLPI_ROOT . '/inc/db.function.php');
@require_once(GLPI_CONFIG_DIR . '/config_db.php');

function check_db_config() {
    $DB = new DB();
    
    $hostport = explode(":", $DB->dbhost);
    if (count($hostport) < 2) {
        $ret = ($DB->dbhost === getenv('GLPI_DATABASE_HOST'));
    } else {
        $ret = ($hostport[0] === getenv('GLPI_DATABASE_HOST'))
            && ($hostport[1] === getenv('GLPI_DATABASE_PORT'));
    }

    $ret  = $ret 
        && ($DB->dbuser === getenv('GLPI_DATABASE_USERNAME'))
        && ($DB->dbpassword === urlencode(getenv('GLPI_DATABASE_PASSWORD')))
        && ($DB->dbdefault === getenv('GLPI_DATABASE_NAME'));

    if ($ret) {
        return 0;
    } else {
        return 1;
    }     
}

exit(check_db_config());
